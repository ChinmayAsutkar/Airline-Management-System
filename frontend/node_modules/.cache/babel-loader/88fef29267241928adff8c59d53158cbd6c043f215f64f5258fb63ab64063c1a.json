{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\git\\\\frontend\\\\src\\\\components\\\\AdminRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  const token = localStorage.getItem('token');\n  const userRole = localStorage.getItem('role'); // Assuming user role is stored in localStorage\n  return token && userRole === 'admin' ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 55\n  }, this);\n};\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","AdminRoute","children","token","localStorage","getItem","userRole","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/vscode/git/frontend/src/components/AdminRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst AdminRoute = ({ children }) => {\r\n    const token = localStorage.getItem('token');\r\n    const userRole = localStorage.getItem('role'); // Assuming user role is stored in localStorage\r\n    return token && userRole === 'admin' ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default AdminRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACjC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;EAC/C,OAAOF,KAAK,IAAIG,QAAQ,KAAK,OAAO,GAAGJ,QAAQ,gBAAGF,OAAA,CAACF,QAAQ;IAACS,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9E,CAAC;AAACC,EAAA,GAJIX,UAAU;AAMhB,eAAeA,UAAU;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}